{"ast":null,"code":"var _jsxFileName = \"/home/fx/Desktop/Is_fx_work/Learn/Project_Final/Own/birthday_reminding_ui/birthreminder/src/MyComponents/Plan.js\";\nimport React from 'react';\nimport './board.css';\nimport List from './list';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Plan(props) {\n  const arr = props.p;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-dark title\",\n      children: \"Birthday Remainder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 1\n    }, this), arr.map((value, i) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          id: \"site-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"today\",\n              children: /*#__PURE__*/_jsxDEV(List, {\n                info: Today(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"upcoming text-dark\",\n              children: \"Upcoming\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upcoming\",\n              children: /*#__PURE__*/_jsxDEV(List, {\n                info: Upcoming(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 10\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true); ////\n  // return(\n  // <main id='site-main'>\n  //       <div className=\"board\">\n  //             <div className='today'>\n  //             <h1 className=\"text-dark title\">Birthday Remainder</h1>\n  //            {/* <List name={props.name} date={props.date} image ={props.image} ></List> */}\n  //            <li key={props.i}>\n  //                         <div className=\"flex\">\n  //                             <img src={props.image} alt=\"img\" />\n  //                             <div className=\"title\">\n  //                                 <h3 className='name'>{props.name}</h3>\n  //                                 <h5 className=\"age\">Birthday : {props.date}</h5>\n  //                                 <h5 className=\"age\">{Old(props.date)} years</h5>\n  //                             </div>\n  //                         </div>\n  //                     </li>\n  //             </div>\n  //             <h2 className='upcoming text-dark'>Upcoming</h2>\n  //             <div className='upcoming'>\n  //             <List name={props.name} date={props.date} image ={props.image} upcoming={true}></List>\n  //             </div>\n  //       </div>\n  //   </main>\n  // );\n  ////\n} // how old the person is\n\n\n_c = Plan;\n\nfunction Old(personAge) {\n  let year = new Date(personAge).getFullYear();\n  let currentYear = new Date().getFullYear();\n  let age = currentYear - year;\n  return age;\n}\n\n_c2 = Old;\n\nfunction Today(person) {\n  let currentDay = new Date().getDate();\n  let currentMonth = new Date().getMonth();\n  let filter = person.filter(data => {\n    let day = new Date(data.birthday).getDate();\n    let month = new Date(data.birthday).getMonth();\n    return currentDay === day && currentMonth === month;\n  });\n  return filter;\n} // upcoming birthdays\n\n\n_c3 = Today;\n\nfunction Upcoming(person) {\n  let currentMonth = new Date().getMonth();\n  let currentDay = new Date().getDate();\n  let filter = person.filter(data => {\n    let month = new Date(data.birthday).getMonth();\n    let day = new Date(data.birthday).getDate();\n    if (currentDay === day) return;\n    return month >= currentMonth || month <= currentMonth;\n  });\n  return filter;\n}\n\n_c4 = Upcoming;\nexport default Plan;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Plan\");\n$RefreshReg$(_c2, \"Old\");\n$RefreshReg$(_c3, \"Today\");\n$RefreshReg$(_c4, \"Upcoming\");","map":{"version":3,"sources":["/home/fx/Desktop/Is_fx_work/Learn/Project_Final/Own/birthday_reminding_ui/birthreminder/src/MyComponents/Plan.js"],"names":["React","List","Plan","props","arr","p","map","value","i","Today","Upcoming","Old","personAge","year","Date","getFullYear","currentYear","age","person","currentDay","getDate","currentMonth","getMonth","filter","data","day","birthday","month"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './board.css';\nimport List from './list'\n\nfunction Plan(props) {\n const arr = props.p\n return <>\n  {/* <li className=\"shadow p-2 my-2 col-sm-9\">{props.value + props.date}</li>\n  <li className=\"shadow p-2 my-2 col-sm-9\">{props.date}</li>\n  <button className=\"btn btn-danger my-2 col-sm-2 offset-1\" onClick={() => { props.sendData(props.id) }}>X</button> */}\n<h1 className=\"text-dark title\">Birthday Remainder</h1>\n  {\n   arr.map((value, i) => {\n    return (<React.Fragment key={i}>\n     {/* <li className=\"shadow p-2 my-2 col-sm-9\">{value}</li>\n     <button className=\"btn btn-danger my-2 col-sm-2 offset-1\" onClick={() => { props.sendData(i) }}>X</button> */}\n         <main id='site-main'>\n          <div className=\"board\">\n                <div className='today'>\n                \n               <List info={Today(value)}></List>\n              \n                </div>\n                <h2 className='upcoming text-dark'>Upcoming</h2>\n            \n                <div className='upcoming'>\n                <List info={Upcoming(value)}></List>\n                </div>\n          </div>\n      </main>\n    </React.Fragment>)\n   })\n  } \n\n </>\n\n\n////\n// return(\n    // <main id='site-main'>\n    //       <div className=\"board\">\n    //             <div className='today'>\n    //             <h1 className=\"text-dark title\">Birthday Remainder</h1>\n    //            {/* <List name={props.name} date={props.date} image ={props.image} ></List> */}\n    //            <li key={props.i}>\n    //                         <div className=\"flex\">\n    //                             <img src={props.image} alt=\"img\" />\n    //                             <div className=\"title\">\n    //                                 <h3 className='name'>{props.name}</h3>\n    //                                 <h5 className=\"age\">Birthday : {props.date}</h5>\n    //                                 <h5 className=\"age\">{Old(props.date)} years</h5>\n    //                             </div>\n    //                         </div>\n    //                     </li>\n    //             </div>\n    //             <h2 className='upcoming text-dark'>Upcoming</h2>\n            \n    //             <div className='upcoming'>\n    //             <List name={props.name} date={props.date} image ={props.image} upcoming={true}></List>\n    //             </div>\n    //       </div>\n    //   </main>\n// );\n////\n\n\n}\n// how old the person is\nfunction Old(personAge){\n    let year = new Date(personAge).getFullYear();\n    let currentYear = new Date().getFullYear();\n    \n    let age = currentYear - year;\n   return age;\n}\n\n\nfunction Today(person){\n    let currentDay = new Date().getDate();\n    let currentMonth = new Date().getMonth();\n\n    let filter = person.filter(data => {\n        let day = new Date(data.birthday).getDate();\n        let month = new Date(data.birthday).getMonth();\n\n        return currentDay === day && currentMonth === month;\n    })\n    return filter;\n}\n\n\n// upcoming birthdays\nfunction Upcoming(person){\n    let currentMonth = new Date().getMonth();\n    let currentDay = new Date().getDate();\n\n    let filter =person.filter(data => {\n        let month = new Date(data.birthday).getMonth();\n        let day = new Date(data.birthday).getDate();\n\n        if (currentDay === day) return;\n        return month >= currentMonth || month <= currentMonth ;\n    })\n\n    return filter;\n\n}\n\nexport default Plan;"]},"metadata":{},"sourceType":"module"}